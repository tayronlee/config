# singletime config
if [[ ! -n "$TAYRON_CONFIG_SET" ]]; then
  #path
  if [[ ! -n $(echo $PATH | grep "$HOME/bin:") ]] ;
  then
    export PATH="$HOME/bin:$PATH"
  fi
  export TAYRON_CONFIG_SET="1"
fi

#tab behavior
shopt -s direxpand

#editor
export EDITOR='/usr/bin/vim'

#prompt
get_git_info() {
  local none="\x01\033[00m\x02"
  local blue="\x01\033[38;5;69m\x02"
  local green="\x01\033[38;5;70m\x02"
  local red="\x01\033[38;5;124m\x02"
  status=$(git status -sb 2> /dev/null)
  if [[ $status ]]; then
    echo -en "${blue}(${none}"
    branch=$(echo "$status" | head -n 1 | sed 's/## //g' | sed 's/\.\.\..*//g')
    [[ $branch == "HEAD (no branch)" ]] && echo -en "${red}HEAD" || echo -n "${branch}"
    ahead=$(echo "$status" | head -n 1 | grep -c "ahead")
    [[ $ahead != "0" ]] && echo -en "${green}^"
    behind=$(echo "$status" | head -n 1 | grep -c "behind")
    [[ $behind != "0" ]] && echo -en "${red}v"
    index=$(echo "$status" | grep -c "^[MADRC]")
    [[ $index != "0" ]] && echo -en "${blue}|${green}${index}"
    wtree=$(echo "$status" | grep -c "^.[MADRCU?]")
    [[ $wtree != "0" ]] && echo -en "${blue}|${red}${wtree}"
    echo -en "${blue})${none}"
  fi
}
PROMPT_COMMAND='git_info=`get_git_info`'
none="\[\033[00m\]"
blue="\[\033[38;5;69m\]"
export PS1="\u${blue}@${none}\h${blue}[${none}\w${blue}]${none}\${git_info}$ "
unset none blue

export FZF_DEFAULT_COMMAND="find -L . -type f"
if which batcat &> /dev/null; then
	export FZF_DEFAULT_OPTS="--height 40% --reverse --preview 'batcat -p --color=always {} 2>/dev/null'"
	alias cat='batcat -p'
else
	export FZF_DEFAULT_OPTS="--height 40% --reverse --preview 'bat -p --color=always {} 2>/dev/null'"
	alias cat='bat -p'
fi
export BAT_THEME="TwoDark"

alias rm='rm -i'
alias grep='grep --color=auto -sI'
alias gitlog='git log --pretty=format:"%C(yellow)%h %Cblue%>(12)%ad %Cgreen%<(7)%aN%Cred%d %Creset%s" --graph'
alias k8='kubectl'

mkcd() { mkdir "$1" && cd "$1" ; }
cheat() {
  if [[ $# != 0 ]]; then
    local query=$1;
    if [[ $# > 1 ]]; then
      query=$query"/"$(echo $* | awk '{for (i=2; i<NF; i++) printf $i "+"; print $NF}')
    fi
    curl cheat.sh/$query | bat
  fi
}


#direnv support
#eval "$(direnv hook bash)"
#export DIRENV_LOG_FORMAT=
